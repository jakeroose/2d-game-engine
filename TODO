valgrind --leak-check=full ./run

look into blitting light polygon shape onto an image to render on GPU
- same with UI elements, seems like sdl primitive draw funcs are super slow
- CUDA example from class
https://stackoverflow.com/questions/20070155/how-to-set-a-pixel-in-a-sdl-surface

Polish:
simple introduction level to learn mechanics
more ballanced jumping 
Scoring / Ending
pop-ups to give player directions
don't stop camera from following along edges of the map
Walls have width?
Music
Sound
have lights follow player via some slerp function (flocking?)
lights don't clip through walls
smoothly regain and lose energy
cancel explosion method

=== End of "Need to Do" ===
Things to consider:
potentially a way to combine lightPolygons so that there is only one pass over
  the x coordinates of the viewport
if adding slerp functionality to movement then that will help prevent falling through
  walls durring heavy lag (i.e. valgrind)
player inherit from SmartSprite or other way around
each enemy, collectable, light may need it's own list of walls to compute from?

Bugs:
jumping/flying depends on frame rate
border walls not added to free walls

Words for title:
vitality - capacity for survival or for the continuation of a meaningful or purposeful existence
labyrinth

